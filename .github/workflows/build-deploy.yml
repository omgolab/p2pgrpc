name: Call - Build -> Deploy
permissions: read-all

on:
  push:
    branches:
      - "**local**"
      - deploy-*
      - main
      # - force-deploy-* # only for forced deploy

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_and_deploy:
    runs-on: ${{ contains(github.ref, 'local') && github.event.sender.login || 'ubuntu-latest' }}
    timeout-minutes: 600
    steps:
      - name: Build and then deploy
        uses: astronlabltd/devops-pkg/.github/entrypoints/dispatch@omar/flutter-n-co #FIXME: change in prod
        with:
          workflow-id: dispatch-ci-cd.yml
          ref: omar/flutter-n-co #FIXME: change in the prod  # todo: comment out and/or remove later issue#2
          dev-proxy: ${{ contains(github.ref, 'local') }}
          action-keys: build-node-frontend, build-go-backend, deploy-deployagent
          c-repo: ${{ github.repository }} # todo: comment out and/or remove later issue#2
          c-ref: ${{ github.ref }} # todo: comment out and/or remove later issue#2
          # deploy via gw.stage if its from main so it doesn't crash while deploying, else via gw.prod if its from non-main
          action-data: |-
            {
              "build-go-backend":{
                "cache": "true",
                "main_go_dir": "./",
                "bin_dir": "services/v1",
                "post_build_script": "DEST_DIR=\\\"$DEST_PATH_REL/services/v1/\\\"; mkdir -p \\\"$DEST_DIR\\\""
              },
              "deploy-deployagent": {
                "dest_folder": "webcleantemplate",
                "keep_files": "**/*.env",
                "backend_dir": "services/v1"
              }
            }
